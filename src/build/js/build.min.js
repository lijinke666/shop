"use strict";function _objectWithoutProperties(t,e){var n={};for(var o in t)e.indexOf(o)>=0||Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o]);return n}!function(t){t.methodCover={capacity:function(t,e){var e=e||1e3,n=$('<div class="alert-light-box"><div class="msg-box">'+t+'</div><div class="bg-box">'+t+"</div></div>");$(document.body).append(n);var t=n.find(".msg-box"),o=n.find(".bg-box"),a=(n.width()-t.width())/2;t.css("left",a+"px"),o.css("left",a+"px"),setTimeout(function(){setTimeout(function(){n.remove(),n=null},400),n.css("opacity",0)},e)},urlback:function(t){history.length>1?history.back():("undefind"!=typeof t&&t||(t="/"),history.href=t)},getParams:function(){var e=t.location.hash;return data[e].params},setItem:function(t,e){data[t]=e},getItem:function(t){return data[t]},getCount:function(){return++data.zIndex},setForword:function(t){data.isForward=t},getForword:function(){return data.isForward},on:function(t,e){data.events||(data.events={}),data.events[t]=e},emit:function(t,e){var n=data.events;n&&n[t]&&n[t](e)},go:function(e,n){console.log(this),this.setForword(!0);var o=$('<a href="'+e+'" style="display:none"></a>');$(document.body).append(o),o.get(0).click();var a=t.location.hash,i=this.getItem(a);i?i.params=n:this.setItem(a,{params:n}),o.remove()},back:function(){flag&&(flag=!1,setTimeout(function(){flag=!0},700),this.setForword(!1),t.history.back())}}}(window),function(){function t(){var t=document.getElementById("loading");t.parentNode.removeChild(t)}document.write('<div id="loading"><div class="cont"><div class="loadyuan"><span></span></div>加载中，请稍后</div></div>'),document.getElementById("loading").ontouchstart=function(t){t.preventDefault()},"complete"==document.readyState?t():document.onreadystatechange=function(){"complete"==document.readyState&&t()}}();var json={name:"测试es语法",sex:"ns",a:1,b:2,c:3},name=json.name,sex=json.sex,attr=_objectWithoutProperties(json,["name","sex"]);console.log(name),console.log(attr);var a=function(t,e){return t+e};a(1,2);var add=function(t,e){return t+e};add.apply(void 0,[1,2]);